{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwong/Desktop/dubhacks2021/src/Components/Courses.js\";\nimport './../App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundCourse: {\n        num: \"no course number found\",\n        name: \"no course name found\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/list\").then(result => this.setState({\n      courseList: result\n    }, this.parseCourseList));\n  }\n\n  parseCourseList() {\n    let searched = \"CSE 142\";\n    let courseArr = this.state.courseList.data;\n\n    for (let i = 0; i < courseArr.length; i++) {\n      let num = courseArr[i].course.num;\n      let courseNum = num.split(/(\\s+)/).filter(e => e.trim().length > 0).join(\" \");\n\n      if (courseNum === searched) {\n        this.setState({\n          foundCourse: courseArr[i].course\n        });\n        console.log(courseArr[i]);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.foundCourse.num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.state.foundCourse.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Courses;","map":{"version":3,"sources":["/Users/tylerwong/Desktop/dubhacks2021/src/Components/Courses.js"],"names":["React","Component","axios","Courses","constructor","props","state","foundCourse","num","name","componentDidMount","get","then","result","setState","courseList","parseCourseList","searched","courseArr","data","i","length","course","courseNum","split","filter","e","trim","join","console","log","render"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AAACC,QAAAA,GAAG,EAAE,wBAAN;AAAgCC,QAAAA,IAAI,EAAE;AAAtC;AADJ,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AACjBR,IAAAA,KAAK,CAACS,GAAN,CAAU,WAAV,EAAuBC,IAAvB,CAA6BC,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KAAd,EAAsC,KAAKG,eAA3C,CAAxC;AACF;;AAEDA,EAAAA,eAAe,GAAG;AACd,QAAIC,QAAQ,GAAG,SAAf;AACA,QAAIC,SAAS,GAAG,KAAKZ,KAAL,CAAWS,UAAX,CAAsBI,IAAtC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAEvC,UAAIZ,GAAG,GAAGU,SAAS,CAACE,CAAD,CAAT,CAAaE,MAAb,CAAoBd,GAA9B;AACA,UAAIe,SAAS,GAAGf,GAAG,CAACgB,KAAJ,CAAU,OAAV,EAAmBC,MAAnB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASN,MAAT,GAAkB,CAAlD,EAAqDO,IAArD,CAA0D,GAA1D,CAAhB;;AACA,UAAIL,SAAS,KAAKN,QAAlB,EAA4B;AACxB,aAAKH,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEW,SAAS,CAACE,CAAD,CAAT,CAAaE;AAA5B,SAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,CAACE,CAAD,CAArB;AACH;AACJ;AACJ;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,kBAAM,KAAKzB,KAAL,CAAWC,WAAX,CAAuBC;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAM,KAAKF,KAAL,CAAWC,WAAX,CAAuBE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAjC6B;;AAoChC,eAAeN,OAAf","sourcesContent":["import './../App.css';\nimport React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        foundCourse: {num: \"no course number found\", name: \"no course name found\"}\n    };\n  }\n\n  componentDidMount() {\n     axios.get(\"/api/list\").then((result) => this.setState({ courseList: result }, this.parseCourseList));\n  }\n\n  parseCourseList() {\n      let searched = \"CSE 142\";\n      let courseArr = this.state.courseList.data;\n      for (let i = 0; i < courseArr.length; i++) {\n\n          let num = courseArr[i].course.num;\n          let courseNum = num.split(/(\\s+)/).filter( e => e.trim().length > 0).join(\" \");\n          if (courseNum === searched) {\n              this.setState({ foundCourse: courseArr[i].course });\n              console.log(courseArr[i]);\n          }\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"courses\">\n          <h2>{ this.state.foundCourse.num }</h2>\n          <h2>{ this.state.foundCourse.name }</h2>\n      </div>\n    );\n  }\n}\n\nexport default Courses;"]},"metadata":{},"sourceType":"module"}