{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwong/Desktop/dubhacks2021/src/Components/Courses.js\";\nimport './../App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundCourse: {\n        num: \"no course number found\",\n        name: \"no course name found\"\n      },\n      courseDescription: \"\",\n      fetched: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/list\").then(result => this.setState({\n      courseList: result\n    }, this.parseCourseList));\n    axios.post(\"/api/course_desc\", {\n      course: this.props.course\n    }).then(response => {\n      this.setState({\n        courseDescription: response.data\n      });\n    });\n  }\n\n  parseCourseList() {\n    let searched = this.props.course;\n    let courseArr = this.state.courseList.data;\n\n    for (let i = 0; i < courseArr.length; i++) {\n      let num = courseArr[i].course.num;\n      let courseNum = num.split(/(\\s+)/).filter(e => e.trim().length > 0).join(\" \");\n\n      if (courseNum === searched) {\n        this.setState({\n          foundCourse: courseArr[i].course\n        });\n        console.log(courseArr[i]);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"courses\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.state.foundCourse.num, \": \", this.state.foundCourse.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Courses;","map":{"version":3,"sources":["/Users/tylerwong/Desktop/dubhacks2021/src/Components/Courses.js"],"names":["React","Component","axios","Courses","constructor","props","state","foundCourse","num","name","courseDescription","fetched","componentDidMount","get","then","result","setState","courseList","parseCourseList","post","course","response","data","searched","courseArr","i","length","courseNum","split","filter","e","trim","join","console","log","render"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AAACC,QAAAA,GAAG,EAAE,wBAAN;AAAgCC,QAAAA,IAAI,EAAE;AAAtC,OADJ;AAETC,MAAAA,iBAAiB,EAAE,EAFV;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CAACW,GAAN,CAAU,WAAV,EAAuBC,IAAvB,CAA6BC,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KAAd,EAAsC,KAAKG,eAA3C,CAAxC;AACAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,kBAAX,EAA+B;AAACC,MAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWe;AAApB,KAA/B,EAA4DN,IAA5D,CAAkEO,QAAD,IAAc;AAC7E,WAAKL,QAAL,CAAc;AAACN,QAAAA,iBAAiB,EAAEW,QAAQ,CAACC;AAA7B,OAAd;AACD,KAFD;AAGD;;AAEDJ,EAAAA,eAAe,GAAG;AACd,QAAIK,QAAQ,GAAG,KAAKlB,KAAL,CAAWe,MAA1B;AACA,QAAII,SAAS,GAAG,KAAKlB,KAAL,CAAWW,UAAX,CAAsBK,IAAtC;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAEvC,UAAIjB,GAAG,GAAGgB,SAAS,CAACC,CAAD,CAAT,CAAaL,MAAb,CAAoBZ,GAA9B;AACA,UAAImB,SAAS,GAAGnB,GAAG,CAACoB,KAAJ,CAAU,OAAV,EAAmBC,MAAnB,CAA2BC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASL,MAAT,GAAkB,CAAlD,EAAqDM,IAArD,CAA0D,GAA1D,CAAhB;;AACA,UAAIL,SAAS,KAAKJ,QAAlB,EAA4B;AACxB,aAAKP,QAAL,CAAc;AAAET,UAAAA,WAAW,EAAEiB,SAAS,CAACC,CAAD,CAAT,CAAaL;AAA5B,SAAd;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACC,CAAD,CAArB;AACH;AACJ;AACJ;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAA,mBAAO,KAAK7B,KAAL,CAAWC,WAAX,CAAuBC,GAA9B,QAAsC,KAAKF,KAAL,CAAWC,WAAX,CAAuBE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AArC6B;;AAwChC,eAAeN,OAAf","sourcesContent":["import './../App.css';\nimport React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        foundCourse: {num: \"no course number found\", name: \"no course name found\"},\n        courseDescription: \"\",\n        fetched: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/list\").then((result) => this.setState({ courseList: result }, this.parseCourseList));\n    axios.post(\"/api/course_desc\", {course: this.props.course}).then((response) => {\n      this.setState({courseDescription: response.data});\n    });\n  }\n\n  parseCourseList() {\n      let searched = this.props.course;\n      let courseArr = this.state.courseList.data;\n      for (let i = 0; i < courseArr.length; i++) {\n\n          let num = courseArr[i].course.num;\n          let courseNum = num.split(/(\\s+)/).filter( e => e.trim().length > 0).join(\" \");\n          if (courseNum === searched) {\n              this.setState({ foundCourse: courseArr[i].course });\n              console.log(courseArr[i]);\n          }\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"courses\">\n          <h1 >{ this.state.foundCourse.num}: { this.state.foundCourse.name }</h1>\n      </div>\n    );\n  }\n}\n\nexport default Courses;"]},"metadata":{},"sourceType":"module"}