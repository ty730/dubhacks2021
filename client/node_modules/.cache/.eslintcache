[{"/Users/tylerwong/Desktop/dubhacks2021/client/src/index.js":"1","/Users/tylerwong/Desktop/dubhacks2021/client/src/App.js":"2","/Users/tylerwong/Desktop/dubhacks2021/client/src/reportWebVitals.js":"3","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Home.js":"4","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Professor.js":"5","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Reddit.js":"6","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Courses.js":"7","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Banner.js":"8","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Footer.js":"9","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/PreviousQuarters.js":"10"},{"size":500,"mtime":1635016234216,"results":"11","hashOfConfig":"12"},{"size":2688,"mtime":1635096828463,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1635016234217,"results":"14","hashOfConfig":"12"},{"size":1310,"mtime":1635121381507,"results":"15","hashOfConfig":"12"},{"size":2027,"mtime":1635121368601,"results":"16","hashOfConfig":"12"},{"size":1456,"mtime":1635121388963,"results":"17","hashOfConfig":"12"},{"size":2007,"mtime":1635121399884,"results":"18","hashOfConfig":"12"},{"size":2227,"mtime":1635121371094,"results":"19","hashOfConfig":"12"},{"size":294,"mtime":1635121385630,"results":"20","hashOfConfig":"12"},{"size":1291,"mtime":1635121403437,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xvxb3e",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/tylerwong/Desktop/dubhacks2021/client/src/index.js",[],"/Users/tylerwong/Desktop/dubhacks2021/client/src/App.js",["47","48"],"import './App.css';\nimport Banner from './Components/Banner';\nimport Home from './Components/Home';\nimport Footer from './Components/Footer';\nimport Reddit from './Components/Reddit';\n//import Courses from './Components/Courses';\nimport React, { Component, Profiler  } from 'react';\nimport axios from 'axios';\nimport Courses from './Components/Courses';\nimport Professor from './Components/Professor';\nimport PreviousQuarters from './Components/PreviousQuarters';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: null,\n      courseApiData: null,\n      courseList: null,\n      search: false,\n      professors: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/list\").then((result) => this.setState({ ...this.state.course, courseApiData: result, ...this.state.courseList, ...this.state.search, ...this.state.professors }, this.parseCourseList));\n }\n\n parseCourseList() {\n     let courseArr = this.state.courseApiData.data;\n     let niceList = [];\n     for (let i = 0; i < courseArr.length; i++) {\n         let num = courseArr[i].course.num;\n         let courseNum = num.split(/(\\s+)/).filter( e => e.trim().length > 0).join(\" \");\n         niceList.push(courseNum);\n     }\n     console.log(\"getting course list\");\n     this.setState({ ...this.state.course, ...this.state.courseApiData, courseList: niceList, ...this.state.search, ...this.state.professors });\n }\n\n  handleChange(search) {\n    let courseInfo = this.state.courseApiData.data.find((item) => {\n      return item.course.num.split(/(\\s+)/).filter( e => e.trim().length > 0).join(\" \") == search;\n    });\n    console.log(courseInfo.profs);\n    this.setState({ course: search, ...this.state.courseApiData, ...this.courseList, search: true, professors: courseInfo.profs });\n  }\n\n  render() {\n    const course = this.state.course;\n    let display;\n    if (this.state.search) {\n      display =\n      <div>\n        <Courses course={this.state.course} />\n        <div className=\"prof-container\">\n          <h2>Winter 2022 Professor(s)</h2>\n          {this.state.professors.map((prof, i) => (\n            <Professor key={i} profName={prof} />\n          ))}\n        </div>\n        <PreviousQuarters course={this.state.course} />\n        <h2 className=\"reddit-title\">Popular Q&As from Reddit</h2>\n        <Reddit course={this.state.course} />\n      </div>\n    } else {\n      display = <Home />\n    }\n    return (\n      <div className=\"App\">\n        <Banner courseList={this.state.courseList} value={course} onChange={this.handleChange} />\n        {display}\n        <Footer />\n    </div>\n    );\n  }\n}\n\nexport default App;\n\n","/Users/tylerwong/Desktop/dubhacks2021/client/src/reportWebVitals.js",[],"/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Home.js",[],"/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Professor.js",["49"],"import '../App.css';\nimport React, { Component } from 'react';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport axios from 'axios';\nimport thumbdown from '../media/thumb-down.png';\nimport thumbup from '../media/thumbs-up.png';\n\nclass Professor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      professor: null,\n      fetched: false,\n    };\n  }\n\n  componentDidMount() {\n    axios.post('/api/prof', {\n      prof: this.props.profName //TODO REPLACE WITH PROP\n    }).then((res) => {\n      this.setState({professor: res.data, fetched: true});\n    });\n  }\n\n  getQuality(quality) {\n    let color = \"\";\n    if (quality >= 4) {\n      color = \"great\";\n    } else if (quality > 3) {\n      color = \"good\";\n    } else if (quality > 2) {\n      color = \"okay\";\n    } else {\n      color = \"poor\";\n    }\n    return <div className={color}>Quality: <br/> {quality} / 5</div>;\n  }\n\n  getTakeAgain(takeAgain) {\n    let image = null;\n    if (takeAgain > 50) {\n      image = thumbup;\n    } else {\n      image = thumbdown;\n    }\n    return <div className=\"takeAgain\">{takeAgain}% would take again<img height=\"15px\" width=\"15px\" src={image}/></div>\n  }\n\n\n\n  render() {\n    let main;\n    if (this.state.fetched) {\n      main =\n        <div className=\"professorContents\">\n          <h3><a href={this.state.professor.link}>{this.props.profName}</a></h3>\n          <div className=\"quality\">{this.getQuality(this.state.professor.quality)}</div>\n          <p>Level Of Difficulty: {this.state.professor.difficulty} / 5</p>\n          <p>{this.getTakeAgain(this.state.professor.takeAgain)}</p>\n          <p>From {this.state.professor.rating}</p>\n        </div>\n    } else {\n      main = \n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px'}}>\n          <ScaleLoader color={\"#607D8B\"} loading={!this.state.fetched} size={150} />\n        </div>\n    }\n    return (\n      <div className=\"professor\">\n        {main}\n      </div>\n    );\n  }\n}\n\nexport default Professor;","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Reddit.js",["50"],"import '../App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nclass Reddit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: null,\n      fetched: false,\n    };\n  }\n\n  componentDidMount() {\n    this.wrapper();\n  }\n\n  wrapper() {\n    axios.post('/api/reddit', {\n      course: this.props.course //TODO REPLACE WITH PROP\n    }).then((res) => {\n        console.log(\"here\");\n      console.log(res.data);\n      this.setState({response: res.data, fetched: true});\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.course != prevProps.course)\n    {\n      this.wrapper();\n    }\n  } \n\n  render() {\n    let main;\n    if (this.state.fetched) {\n      main = <div className=\"reddit\">{this.state.response.map((redditPost, i) => {\n          return (<div>\n            <h2 key={i}>{redditPost.selftext}</h2>\n            {redditPost.comments.map((comment, j) => {\n                return (\n                    <p key={i}>{comment.body}</p>\n                )\n            })}\n            </div>\n            )\n      })}</div>\n    } else {\n      main = <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px'}}>\n      <ScaleLoader color={\"#607D8B\"} loading={!this.state.fetched} size={150} />\n    </div>\n    }\n    return (\n      <div>\n        {main}\n      </div>\n    );\n  }\n}\n\nexport default Reddit;","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Courses.js",["51"],"import '../App.css';\nimport React, { Component } from 'react';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport axios from 'axios';\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        foundCourse: {num: \"\", name: \"\"},\n        courseList: null,\n        courseDescription: \"\",\n        fetched: false\n    };\n  }\n\n  componentDidMount() {\n    this.wrapper();\n  }\n\n  wrapper() {\n    axios.get(\"/api/list\").then((result) => this.setState({ ...this.state.foundCourse, courseList: result, ...this.state.courseDescription, ...this.state.fetched }, this.parseCourseList));\n    axios.post(\"/api/course_desc\", {course: this.props.course}).then((response) => {\n      this.setState({courseDescription: response.data});\n    });\n  }\n\n  parseCourseList() {\n      let searched = this.props.course;\n      let courseArr = this.state.courseList.data;\n      for (let i = 0; i < courseArr.length; i++) {\n\n          let num = courseArr[i].course.num;\n          let courseNum = num.split(/(\\s+)/).filter( e => e.trim().length > 0).join(\" \");\n          if (courseNum === searched) {\n              this.setState({ foundCourse: courseArr[i].course, ...this.state.courseList, ...this.state.courseDescription, fetched: true });\n              console.log(courseArr[i]);\n          }\n      }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.course != prevProps.course)\n    {\n      this.wrapper();\n    }\n  } \n\n  render() {\n    let main;\n    if (this.state.fetched) {\n      main = <div className=\"courses\">\n          <h1 >{ this.state.foundCourse.num}: { this.state.foundCourse.name }</h1>\n          <p>{ this.state.courseDescription }</p>\n      </div>\n    } else {\n      main = <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px'}}>\n      <ScaleLoader color={\"#607D8B\"} loading={!this.state.fetched} size={150} />\n    </div>\n    }\n    return (\n      <div key={this.props.course}>{main}</div>\n    );\n  }\n}\n\nexport default Courses;","/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Banner.js",[],"/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/Footer.js",[],"/Users/tylerwong/Desktop/dubhacks2021/client/src/Components/PreviousQuarters.js",["52"],"import '../App.css';\nimport React, { Component } from 'react';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport axios from 'axios';\n\nclass PreviousQuarters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previousQuarters: null,\n      fetched: false,\n    };\n  }\n\n  componentDidMount() {\n    this.wrapper();\n  }\n\n  wrapper() {\n    axios.post('/api/prev_quarters', {\n      course: this.props.course\n    }).then((res) => {\n      this.setState({previousQuarters: res.data, fetched: true});\n    });\n }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.course != prevProps.course)\n    {\n      this.wrapper();\n    }\n  } \n\n  render() {\n    let main = [];\n    if (this.state.fetched) {\n      this.state.previousQuarters.forEach((obj) => {\n        console.log(obj.prof);\n        main.push(\n          <div>\n            <a href={obj.link}>{obj.term}</a>\n            <span> with professor(s) {obj.prof.replace('(','').replace(')','')} </span>\n          </div>\n        );\n      });\n    } else {\n      main = <ScaleLoader color={\"#607D8B\"} loading={!this.state.fetched} size={150} />\n    }\n    return (\n      <div className=\"prev_quarter\">\n        <h2>Previous Quarter Pages</h2>\n        {main}\n      </div>\n    );\n  }\n}\n\nexport default PreviousQuarters;",{"ruleId":"53","severity":1,"message":"54","line":7,"column":28,"nodeType":"55","messageId":"56","endLine":7,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":45,"column":89,"nodeType":"59","messageId":"60","endLine":45,"endColumn":91},{"ruleId":"61","severity":1,"message":"62","line":46,"column":68,"nodeType":"63","endLine":46,"endColumn":113},{"ruleId":"57","severity":1,"message":"64","line":30,"column":26,"nodeType":"59","messageId":"60","endLine":30,"endColumn":28},{"ruleId":"57","severity":1,"message":"64","line":43,"column":26,"nodeType":"59","messageId":"60","endLine":43,"endColumn":28},{"ruleId":"57","severity":1,"message":"64","line":28,"column":26,"nodeType":"59","messageId":"60","endLine":28,"endColumn":28},"no-unused-vars","'Profiler' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='."]